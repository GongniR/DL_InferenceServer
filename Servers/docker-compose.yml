version: "3.3"
services:
  minio:
      restart: always
      image: minio/minio:RELEASE.2023-11-01T01-57-10Z-cpuv1
      container_name: S3_minio
      volumes:
        - ./minio_data:/data
      ports:
        - "${MINIO_PORT}:9000"
        - "9001:9001"
      networks:
        - frontend
        - backend
      environment:
        - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
        - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}
      command: ["server", "--console-address", ":9001", "/data" ]
      healthcheck:
        test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
        interval: 5s
        retries: 1
        start_period: 5s
        timeout: 5s
    
  create_buckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add minio http://192.168.0.32:9000 minio minio123 --api S3v4;
      [[ ! -z "`/usr/bin/mc ls minio | grep challenge`" ]] || /usr/bin/mc mb minio/NIFTY_BUCKET;
      /usr/bin/mc policy download minio/NIFTY_BUCKET;
      
      exit 0;
      '
      
  triton_server:
    image: nvcr.io/nvidia/tritonserver:23.12-py3
    container_name: triton_server
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    volumes:
      - /home/auser/model_repository:/models
    command: ["tritonserver", "--model-repository=/models"]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  
volumes:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge